---

---

<button class="no-outline" id="themeToggle" aria-label="theme toggle">
  <svg
    id="icon-toggle"
    xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    x="0px"
    y="0px"
    viewBox="0 0 120 120"
    width="40"
    height="40"
    xml:space="preserve"
  >
    <g>
      <path
        d="M60,16.005c0,0,0.001,19.736,0.001,43.994c0,24.258-0.001,43.995-0.001,43.995c-24.258,0-43.994-19.736-43.994-43.995
            C16.006,35.742,35.742,16.005,60,16.005 M60,5.005C29.627,5.005,5.006,29.626,5.006,60c0,30.372,24.622,54.995,54.994,54.995
            S114.995,90.371,114.995,60C114.995,29.626,90.372,5.005,60,5.005L60,5.005z"
      ></path>
    </g>
  </svg>
</button>

<style>
  #themeToggle {
    /* the width and height allow for no flex shrink or grow */
    width: 70px;
    height: 70px;
    flex: 0 0 auto;
  }
</style>

<!--
is:inline includes the script directly into the page, instead 
of budling it separately (Astro specific). This decreases load 
time, which is important here to avoid theme flashing
-->
<script is:inline>
  const themeToggle = document.getElementById("themeToggle");
  const getTheme = () => localStorage.getItem("theme") || "dark";
  const setTheme = (theme) => {
    localStorage.setItem("theme", theme);
    document.documentElement.dataset.theme = theme;
    document.body.classList.add(theme);
  };

  // add the current theme from local storage to DOM, which 
  // happens BEFORE rendering.
  setTheme(getTheme())  

  themeToggle.addEventListener("click", () => {
    if (getTheme() == "light") {
      setTheme("dark");
    } else {
      setTheme("light");
    }
  });
</script>

